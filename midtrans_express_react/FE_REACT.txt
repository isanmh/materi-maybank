Project:
https://github.com/isanmh/fe_toko

- cara install pnpm :
npm install -g pnpm
pnpm install

- setting env & client id di .env :
- cara menjalankan server :
pnpm run dev

SET MIDTRANS :
- pages > checkout > index.js

gunakan javascript metode midtrans :
https://docs.midtrans.com/docs/technical-faq#my-developer-uses-react-js-frontend-framework-and-is-unable-to-use-midtransminjssnapjs-what-should-i-do

- buat folder baru src/hooks/useSnap.js
import { useEffect, useState } from "react";
import { MIDTRANS_API_URL, MIDTRANS_CLIENT_ID } from "../utils/const";

const useSnap = () => {
  const [snap, setSnap] = useState(null);

  useEffect(() => {
    const myMidtransClientKey = MIDTRANS_CLIENT_ID;
    const script = document.createElement("script");
    script.src = `${MIDTRANS_API_URL}/snap/snap.js`;
    script.setAttribute("data-client-key", myMidtransClientKey);
    script.onload = () => {
      setSnap(window.snap);
    };
    document.body.appendChild(script);

    return () => {
      document.body.removeChild(script);
    };
  }, []);

  const snapEmbed = (snap_token, embedId, action) => {
    if (snap) {
      snap.embed(snap_token, {
        embedId,
        onSuccess: function (result) {
          console.log("success", result);
          action.onSuccess(result);
        },
        onPending: function (result) {
          console.log("pending", result);
          action.onPending(result);
        },
        onClose: function () {
          action.onClose();
        },
      });
    }
  };
  return { snapEmbed };
};
export default useSnap;


- tambahkan di pages/checkout/index.js
# fungsi checkout (fungsi pay) :
# import diatas :
import useSnap from "../../hooks/useSnap";

# Snap Embed
const { snapEmbed } = useSnap();
# untuk snapShow
const [snapShow, setSnapShow] = useState(false);

# comment fungsi navigate (pay) :
// navigate(`/order-status?transaction_id=${response.data.id}`)

# pemanggilan snap (dalam fungsi PAY) :
    setSnapShow(true);
    snapEmbed(response.data.snap_token, "snap-container", {
    onSuccess: function (result) {
        console.log("success", result);
        navigate(`/order-status?transaction_id=${response.data.id}`);
        setSnapShow(false);
    },
    onPending: function (result) {
        console.log("pending", result);
        navigate(`/order-status?transaction_id=${response.data.id}`);
        setSnapShow(false);
    },
    onClose: function () {
        navigate(`/order-status?transaction_id=${response.data.id}`);
        setSnapShow(false);
    },
    });

# tambahkan di pages/checkout/index.js
# dom untuk pemanggilan snap dengan menambahkan div id snap-container : 
  <Layout
    title="Checkout"
    onBack={() => navigate("/")}
    full={snapShow}
    noHeader={snapShow}
  >
    {!snapShow && (
      <>
        <p className="section-title">Detail Produk</p>
        <div className="summary">
          {cart.map((item) => (
            <Product key={item.id} item={item} />
          ))}
          <div className="item">
            <p>Total Order</p>
            <p>{numberToRupiah(totalOrder)}</p>
          </div>
        </div>
        <p className="section-title">Detail Pelanggan</p>
        <Input
          label="Nama Lengkap"
          value={customer.name}
          onChange={handleChange}
          name="name"
        />
        <Input
          label="Email"
          value={customer.email}
          onChange={handleChange}
          name="email"
        />
        <div className="action-pay">
          <Button onClick={pay}>Bayar Sekarang</Button>
        </div>
      </>
    )}
    <div id="snap-container"></div> {/* ini adalah container untuk snap */}
  </Layout>